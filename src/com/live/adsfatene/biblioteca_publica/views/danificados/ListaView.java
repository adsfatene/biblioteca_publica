package com.live.adsfatene.biblioteca_publica.views.danificados;

import com.live.adsfatene.biblioteca_publica.controllers.DanificadosController;
import com.live.adsfatene.biblioteca_publica.models.EmprestimoEstoque;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;

public class ListaView extends javax.swing.JPanel {

    private final DanificadosController danificadosController;
    private final List<EmprestimoEstoque> emprestimosEstoques;
    private final DefaultTableModel dtm;
    private final FiltroView filtroView;
    private final SimpleDateFormat sdf;

    public ListaView(DanificadosController danificadosController) {
        initComponents();
        this.danificadosController = danificadosController;
        dtm = (DefaultTableModel) jTableLista.getModel();
        filtroView = new FiltroView(this, false);
        sdf = new SimpleDateFormat("dd/MM/yyyy - HH:mm:ss");
        emprestimosEstoques = new LinkedList<>();
    }

    @Override
    public void setVisible(boolean aFlag) {
        if (!aFlag) {
            filtroView.setVisible(aFlag);
        }
        super.setVisible(aFlag);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBarAcoes = new javax.swing.JToolBar();
        jToggleButtonFiltro = new javax.swing.JToggleButton();
        jToggleButtonRestaurar = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLista = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jToolBarAcoes.setRollover(true);

        jToggleButtonFiltro.setText("Filtro");
        jToggleButtonFiltro.setFocusable(false);
        jToggleButtonFiltro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonFiltro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonFiltroActionPerformed(evt);
            }
        });
        jToolBarAcoes.add(jToggleButtonFiltro);

        jToggleButtonRestaurar.setText("Restaurar");
        jToggleButtonRestaurar.setFocusable(false);
        jToggleButtonRestaurar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonRestaurar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButtonRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRestaurarActionPerformed(evt);
            }
        });
        jToolBarAcoes.add(jToggleButtonRestaurar);

        add(jToolBarAcoes, java.awt.BorderLayout.PAGE_START);

        jTableLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EmprestimoEstoque", "Emprestimo", "Estoque", "Estado Devolução", "Motivo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableListaMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableListaMousePressed(evt);
            }
        });
        jTableLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableListaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLista);
        jTableLista.getColumnModel().getColumn(0).setMinWidth(0);
        jTableLista.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTableLista.getColumnModel().getColumn(0).setMaxWidth(0);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonFiltroActionPerformed
        danificadosController.filtrar(new EmprestimoEstoque());
    }//GEN-LAST:event_jToggleButtonFiltroActionPerformed

    private void jToggleButtonRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonRestaurarActionPerformed
        if (jTableLista.getSelectedRowCount() > 0) {
            EmprestimoEstoque emprestimoEstoque = (EmprestimoEstoque) jTableLista.getValueAt(jTableLista.getSelectedRow(), 0);
            if (emprestimoEstoque.getEstadoDevolucao().equalsIgnoreCase("Avariado")) {
                danificadosController.restaurar(emprestimoEstoque);
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um Emprestimo Avariado.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Emprestimo.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        jToggleButtonRestaurar.setSelected(false);
    }//GEN-LAST:event_jToggleButtonRestaurarActionPerformed

    private void jTableListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaMouseClicked
    }//GEN-LAST:event_jTableListaMouseClicked

    private void jTableListaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaMouseEntered
    }//GEN-LAST:event_jTableListaMouseEntered

    private void jTableListaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaMousePressed
    }//GEN-LAST:event_jTableListaMousePressed

    private void jTableListaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListaKeyPressed
    }//GEN-LAST:event_jTableListaKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLista;
    private javax.swing.JToggleButton jToggleButtonFiltro;
    private javax.swing.JToggleButton jToggleButtonRestaurar;
    private javax.swing.JToolBar jToolBarAcoes;
    // End of variables declaration//GEN-END:variables

    public void atualizar(List<EmprestimoEstoque> emprestimosEstoques) {
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }

        this.emprestimosEstoques.clear();

        this.emprestimosEstoques.addAll(emprestimosEstoques);

        for (EmprestimoEstoque emprestimoEstoque : this.emprestimosEstoques) {
            dtm.addRow(new Object[dtm.getColumnCount()]);
            int coluna = 0;
            dtm.setValueAt(emprestimoEstoque, dtm.getRowCount() - 1, coluna++);
            dtm.setValueAt(emprestimoEstoque.getEmprestimo(), dtm.getRowCount() - 1, coluna++);
            dtm.setValueAt(emprestimoEstoque.getEstoque().getMaterial().getCodigo(), dtm.getRowCount() - 1, coluna++);
            dtm.setValueAt(emprestimoEstoque.getEstadoDevolucao(), dtm.getRowCount() - 1, coluna++);
            dtm.setValueAt(emprestimoEstoque.getMotivo(), dtm.getRowCount() - 1, coluna++);
        }
    }

    public DanificadosController getDanificadosController() {
        return danificadosController;
    }

    public JToggleButton getjToggleButtonFiltro() {
        return jToggleButtonFiltro;
    }

    public JToggleButton getjToggleButtonEdicao() {
        return jToggleButtonRestaurar;
    }

    public FiltroView getFiltroView() {
        return filtroView;
    }

    public DefaultTableModel getDtm() {
        return dtm;
    }

    public SimpleDateFormat getSdf() {
        return sdf;
    }
}