package com.live.adsfatene.biblioteca_publica.views.emprestimos;

import com.live.adsfatene.biblioteca_publica.models.Estoque;
import com.live.adsfatene.biblioteca_publica.models.Material;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.live.adsfatene.biblioteca_publica.views.estoques.ListaView;

public class AdicionarEstoqueView extends javax.swing.JDialog {

    private final ListaView listaView;
    private final DefaultTableModel dtm;

    AdicionarEstoqueView(ListaView listaView, boolean modal) {
        super(listaView.getEstoquesController().getAplicacaoController().getAplicacaoView(), modal);
        initComponents();
        this.listaView = listaView;
        dtm = (DefaultTableModel) jTableEstoques.getModel();
    }

    @Override
    public void setVisible(boolean flag) {
        listaView.habilitar(!flag);
        super.setVisible(flag);
        if (flag) {
            setLocationRelativeTo(listaView.getEstoquesController().getAplicacaoController().getAplicacaoView());
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            DefaultTableModel dtmEmprestimosEstoques = listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().getListaView().getCadastroView().getDtm();
            for (int i = 0; i < dtmEmprestimosEstoques.getRowCount(); i++) {
                dtm.addRow(new Object[dtm.getColumnCount()]);
                for (int j = 0; j < dtm.getColumnCount(); j++) {
                    dtm.setValueAt(dtmEmprestimosEstoques.getValueAt(i, j), i, j);
                }
            }
        } else {
            listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().iniciar();
        }
        listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().getListaView().getCadastroView().getjButtonAdicionarEstoque().setSelected(flag);
        listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().getListaView().getCadastroView().setVisible(!flag);
        listaView.habilitar(!flag);
        super.setVisible(flag);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCancelar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonEmprestar = new javax.swing.JButton();
        jButtonAdicionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEstoques = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setTitle("Cadastro");
        setResizable(false);

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonRemover.setText("-");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonEmprestar.setText("Emprestar");
        jButtonEmprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmprestarActionPerformed(evt);
            }
        });

        jButtonAdicionar.setText("+");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jTableEstoques.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estoque", "Titulo", "Formato", "Localização"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableEstoques);
        jTableEstoques.getColumnModel().getColumn(0).setMinWidth(0);
        jTableEstoques.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTableEstoques.getColumnModel().getColumn(0).setMaxWidth(0);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonEmprestar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionar)
                    .addComponent(jButtonRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonEmprestar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        while (jTableEstoques.getSelectedRowCount() > 0) {
            dtm.removeRow(jTableEstoques.getSelectedRow());
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jButtonEmprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmprestarActionPerformed
        if (jTableEstoques.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "estoque é obrigatorio. adicione pelo menos um estoque", "aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel dtmEmprestimosEstoques = listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().getListaView().getCadastroView().getDtm();
            while (dtmEmprestimosEstoques.getRowCount() > 0) {
                dtmEmprestimosEstoques.removeRow(0);
            }
            for (int i = 0; i < dtm.getRowCount(); i++) {
                dtmEmprestimosEstoques.addRow(new Object[dtmEmprestimosEstoques.getColumnCount()]);
                for (int j = 0; j < dtmEmprestimosEstoques.getColumnCount(); j++) {
                    dtmEmprestimosEstoques.setValueAt(dtm.getValueAt(i, j), i, j);
                }
            }
            listaView.getEstoquesController().getAplicacaoController().getEmprestimosController().adicionarEstoque(false);
        }
    }//GEN-LAST:event_jButtonEmprestarActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        if (listaView.getjTableLista().getSelectedRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "estoque é obrigatorio. selecione pelo menos um etoque", "aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            for (Integer linha : listaView.getjTableLista().getSelectedRows()) {
                Estoque estoque = (Estoque) listaView.getjTableLista().getValueAt(linha, 0);
                if (!validarEstoqueAdicionado(estoque)) {
                    int coluna = 0;
                    dtm.addRow(new Object[dtm.getColumnCount()]);
                    dtm.setValueAt(estoque, dtm.getRowCount() - 1, coluna++);
                    dtm.setValueAt(estoque.getMaterial().getDadoMaterial().getTitulo(), dtm.getRowCount() - 1, coluna++);
                    dtm.setValueAt(estoque.getMaterial().getFormato(), dtm.getRowCount() - 1, coluna++);
                    dtm.setValueAt(estoque.getLocalLogicoFisico(), dtm.getRowCount() - 1, coluna++);
                }
            }
        }
    }//GEN-LAST:event_jButtonAdicionarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEmprestar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableEstoques;
    // End of variables declaration//GEN-END:variables

    private boolean validarEstoqueAdicionado(Estoque estoque) {
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (estoque.ehIgual((Estoque) dtm.getValueAt(i, 0))) {
                return true;
            }
        }
        return false;
    }
}